---

- name: 'Setup local partitioning for a RAID encrypted Ubuntu install'
  hosts: localhost
  connection: local
  handlers:
    - name: 'reload udev'
      command: 'udevadm settle'

    - name: 'reload systemd'
      systemd:
        daemon_reload: true
  vars:
    disks:
      - '/dev/sda'
      - '/dev/sdb'
    partitions:
      - name: 'efi'
        part_start: '1MiB'
        part_end: '513MiB'
        part_type: 'primary'
        unit: 'MiB'
        flags: ['esp']
      - name: 'boot'
        part_start: '513MiB'
        part_end: '1025MiB'
        part_type: 'primary'
        unit: 'MiB'
        flags: ['raid']
      - name: 'swap'
        part_start: '1025MiB'
        part_end: '2047MiB'
        part_type: 'primary'
        unit: 'MiB'
        flags: ['raid']
      - name: 'root'
        part_start: '2047MiB'
        part_end: '100%'
        part_type: 'primary'
        unit: 'MiB'
        flags: ['raid']
    raid_arrays:
      - name: 'md0'
        devices: ['/dev/sda2', '/dev/sdb2']
        level: 'raid1'
        metadata: '0.9'
      - name: 'md1'
        devices: ['/dev/sda3', '/dev/sdb3']
        level: 'raid0'
      - name: 'md2'
        devices: ['/dev/sda4', '/dev/sdb4']
        level: 'raid0'
  tasks:
    - name: 'Stop existing arrays'
      command: "mdadm --stop /dev/{{ item['name'] }}"
      when: ansible_facts['devices'][item['name']] is defined
      loop: "{{ raid_arrays }}"

    - name: 'Include disk partition erasure logic'
      include_tasks: 'tasks/delete_disk_partitions.yml'
      loop: "{{ disks }}"
      loop_control:
        loop_var: _disk

    - name: 'Flush handlers to inform the kernel of the new partitions'
      meta: 'flush_handlers'

    - name: 'Include disk partition creation logic'
      include_tasks: 'tasks/create_disk_partitions.yml'
      loop: "{{ disks }}"
      loop_control:
        loop_var: _disk

    - name: 'Flush handlers to inform the kernel of the new partitions'
      meta: 'flush_handlers'

    - name: 'Create arrays'
      command: >-
        mdadm --create /dev/{{ item['name'] }}
        --level {{ item['level'] }}
        --raid-devices {{ item['devices'] | length }}
        --metadata {{ item['metadata'] | default('1.2') }}
        {{ ' '.join(item['devices']) }}
      loop: "{{ raid_arrays }}"
